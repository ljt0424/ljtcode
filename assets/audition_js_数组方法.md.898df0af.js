import{_ as s,o as l,c as a,U as n}from"./chunks/framework.afdf1834.js";const A=JSON.parse('{"title":"数组","description":"","frontmatter":{},"headers":[],"relativePath":"audition/js/数组方法.md","filePath":"audition/js/数组方法.md","lastUpdated":null}'),o={name:"audition/js/数组方法.md"},e=n(`<h1 id="数组" tabindex="-1">数组 <a class="header-anchor" href="#数组" aria-label="Permalink to &quot;数组&quot;">​</a></h1><h2 id="数组的方法" tabindex="-1">数组的方法 <a class="header-anchor" href="#数组的方法" aria-label="Permalink to &quot;数组的方法&quot;">​</a></h2><ol><li>静态方法： <ul><li>Array.from() 从可迭代或者类数组对象创建一个浅拷贝的数组实例</li><li>Array.of() 创建一个数组，参数是数组的值</li><li>Array() 创建一个数组，参数是数组的长度，值为0</li></ul></li><li>遍历： <ul><li>map 将数组中的元素映射到另一个数组返回一个新数组</li><li>foreach 将元素依次执行操作，不产生新数组，不影响原数组</li><li>flatmap 先遍历再展平一级</li></ul></li><li>增删改查： <ul><li>filter 返回一个过滤后的新数组</li><li>pop push shift unshift</li><li>concat</li><li>slice splice</li></ul></li><li>找元素方法： <ul><li>some 有一个行就返回true</li><li>every 有一个不行就返回false</li><li>find 找到符合条件的第一个数</li><li>findlast 反向找到符合条件的第一个数</li><li>findindex 找到符合条件的第一个数的索引</li><li>indexOf 返回某个元素第一个索引如果没有则返回-1</li><li>lastindexOf 返回某个元素最后一个索引如果没有则返回-1、</li><li>includes 判断是否包含某个元素返回true或false</li><li>keys 返回数组索引的 Array Iterator 对象</li><li>values 返回数组值的 Array Iterator 对象</li></ul></li><li>扁平化： <ul><li>flat 数组扁平化，返回一个新数组</li></ul></li><li>字符串相关 <ul><li>join 将数组拼接成字符串</li><li>toLocalString 本地化格式转字符串</li><li>toString 用“，”分隔成字符串</li></ul></li><li>其他 <ul><li>entries 返回一个新的数组迭代器对象类似generator</li><li>reduce 累加器返回一个新数组</li><li>reduceright 累加器从右往左返回一个新数组</li><li>reverse 颠倒数组</li></ul></li></ol><h2 id="数组去重" tabindex="-1">数组去重 <a class="header-anchor" href="#数组去重" aria-label="Permalink to &quot;数组去重&quot;">​</a></h2><h2 id="数组找一个值的方法" tabindex="-1">数组找一个值的方法 <a class="header-anchor" href="#数组找一个值的方法" aria-label="Permalink to &quot;数组找一个值的方法&quot;">​</a></h2><h2 id="entries" tabindex="-1">entries <a class="header-anchor" href="#entries" aria-label="Permalink to &quot;entries&quot;">​</a></h2><p>通过使用迭代器和解构赋值把索引和值一起返回</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> words </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">apple</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">banana</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">orange</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> (</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">index</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> word</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">of</span><span style="color:#A6ACCD;"> words</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">entries</span><span style="color:#A6ACCD;">()) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">index</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">word</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 0 apple</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 1 banana</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 2 orange</span></span></code></pre></div><h2 id="copywithin" tabindex="-1">copywithin <a class="header-anchor" href="#copywithin" aria-label="Permalink to &quot;copywithin&quot;">​</a></h2><p>copyWithin() 将指定位置的成员复制到其他位置（会覆盖原有成员），然后返回当前数组</p><p>参数如下：</p><p>target（必需）：从该位置开始替换数据。如果为负值，表示倒数。 start（可选）：从该位置开始读取数据，默认为 0。如果为负值，表示从末尾开始计算。 end（可选）：到该位置前停止读取数据，默认等于数组长度。如果为负值，表示从末尾开始计算。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">[</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">copyWithin</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// 将从 3 号位直到数组结束的成员（4 和 5），复制到从 0 号位开始的位置，结果覆盖了原来的 1 和 2</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// [4, 5, 3, 4, 5]</span></span></code></pre></div>`,13),p=[e];function t(i,r,c,y,D,C){return l(),a("div",null,p)}const d=s(o,[["render",t]]);export{A as __pageData,d as default};
