import{_ as s,o as a,c as e,U as n}from"./chunks/framework.afdf1834.js";const y=JSON.parse('{"title":"vite","description":"","frontmatter":{},"headers":[],"relativePath":"audition/pack/vite.md","filePath":"audition/pack/vite.md","lastUpdated":null}'),o={name:"audition/pack/vite.md"},t=n(`<h1 id="vite" tabindex="-1">vite <a class="header-anchor" href="#vite" aria-label="Permalink to &quot;vite&quot;">​</a></h1><p>相较于webpack，vite采用不同方式</p><ul><li>开发时，并不对代码打包，直接用ESM方式来运行项目</li><li>在项目部署再打包</li></ul><h2 id="命令" tabindex="-1">命令 <a class="header-anchor" href="#命令" aria-label="Permalink to &quot;命令&quot;">​</a></h2><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">dev</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vite</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">build</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vite build</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">preview</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">preview</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">,</span></span></code></pre></div><ul><li>vite启动开发服务器</li><li>preview命令作用是实时预览打包后代码</li></ul><h2 id="vite脚手架" tabindex="-1">vite脚手架 <a class="header-anchor" href="#vite脚手架" aria-label="Permalink to &quot;vite脚手架&quot;">​</a></h2><p><code>pnpm create vite</code></p><h2 id="vite-config-js" tabindex="-1">vite.config.js <a class="header-anchor" href="#vite-config-js" aria-label="Permalink to &quot;vite.config.js&quot;">​</a></h2><p>配置文件采用ES6模块化规范</p><p>可以使用 defineConfig 工具函数，可以获取类型提示</p>`,11),l=[t];function p(i,c,r,D,F,d){return a(),e("div",null,l)}const v=s(o,[["render",p]]);export{y as __pageData,v as default};
